import { ArrowUpIcon, LoaderCircle } from 'lucide-react';
import * as React from 'react';

import { Button } from '@/components/ui/button';
import { ResizableTextareaProps, Textarea } from '@/components/ui/textarea';
import { cn } from '@/lib/utils';

interface PromptInputProps
  extends Omit<ResizableTextareaProps, 'onChange' | 'onSubmit' | 'value' | 'placeholder'> {
  value?: string;
  placeholder?: string;
  onChange?: (value: string) => void;
  onSubmit?: (value: string) => void;
  icon?: Boolean;
  disabled?: boolean;
  loading?: boolean;
  className?: string;
}

const ThreeStarIcon = ({ className, fill }: { className?: string, fill?: string }) => {
  return (
    <svg
      width="16"
      height="16"
      className={className}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg">
      <path fillRule="evenodd" clipRule="evenodd" d="M3.64062 1.37007C3.68452 1.44982 3.77984 1.48321 3.85734 1.53098L4.55421 1.96055C4.5887 1.98275 4.61707 2.01326 4.63672 2.04927C4.65637 2.08527 4.66667 2.12564 4.66667 2.16667C4.66667 2.20769 4.65637 2.24806 4.63672 2.28407C4.61707 2.32008 4.5887 2.35058 4.55421 2.37278L3.74089 2.81843C3.69823 2.83575 3.66283 2.86722 3.64062 2.90756L3.20611 3.72087C3.18391 3.75537 3.15341 3.78374 3.1174 3.80339C3.08139 3.82303 3.04102 3.83333 3 3.83333C2.95897 3.83333 2.91861 3.82303 2.8826 3.80339C2.84659 3.78374 2.81608 3.75537 2.79388 3.72087L2.34824 2.90756C2.32772 2.86989 2.29677 2.83894 2.25911 2.81843L1.44579 2.37278C1.4113 2.35058 1.38293 2.32008 1.36328 2.28407C1.34363 2.24806 1.33333 2.20769 1.33333 2.16667C1.33333 2.12564 1.34363 2.08527 1.36328 2.04927C1.38293 2.01326 1.4113 1.98275 1.44579 1.96055L2.25911 1.5149C2.29677 1.49439 2.32772 1.46344 2.34824 1.42577L2.79388 0.612458C2.81608 0.577967 2.84659 0.549592 2.8826 0.529942C2.91861 0.510292 2.95897 0.5 3 0.5C3.04102 0.5 3.08139 0.510292 3.1174 0.529942C3.15341 0.549592 3.18391 0.577967 3.20611 0.612458L3.64062 1.37007ZM5.85587 8.60308L8.31958 9.90767C8.43292 9.97158 8.52667 10.0652 8.59058 10.1784L9.89642 12.6398C9.95233 12.7483 10.0371 12.8393 10.1414 12.9028C10.2458 12.9664 10.3655 13 10.4877 13C10.6098 13 10.7297 12.9664 10.8339 12.9028C10.9382 12.8393 11.023 12.7483 11.079 12.6398L12.4094 10.1784C12.4342 10.1175 12.4709 10.0621 12.5175 10.0156C12.564 9.96908 12.6194 9.93242 12.6804 9.90767L15.1441 8.60308C15.2519 8.5435 15.3418 8.45608 15.4044 8.35C15.467 8.244 15.5 8.12308 15.5 8C15.5 7.87692 15.467 7.756 15.4044 7.65C15.3418 7.54392 15.2519 7.45658 15.1441 7.39692L12.6804 6.09236C12.5671 6.02845 12.4733 5.93482 12.4094 5.8216L11.079 3.36013C11.023 3.25165 10.9382 3.16066 10.8339 3.09713C10.7297 3.03361 10.6098 3 10.4877 3C10.3655 3 10.2458 3.03361 10.1414 3.09713C10.0371 3.16066 9.95233 3.25165 9.89642 3.36013L8.68042 5.65234C8.62083 5.76455 8.54492 5.86724 8.45508 5.95702C8.36525 6.04674 8.26258 6.12257 8.15033 6.18197L5.85587 7.39692C5.74805 7.45658 5.65817 7.54392 5.59559 7.65C5.53301 7.756 5.5 7.87692 5.5 8C5.5 8.12308 5.53301 8.244 5.59559 8.35C5.65817 8.45608 5.74805 8.5435 5.85587 8.60308ZM4.28601 12.0465C4.16977 11.9748 4.02677 11.9247 3.96093 11.8051L3.30917 10.6687C3.27587 10.6169 3.23012 10.5744 3.1761 10.5449C3.12208 10.5154 3.06153 10.5 3 10.5C2.93847 10.5 2.87792 10.5154 2.8239 10.5449C2.76988 10.5744 2.72413 10.6169 2.69082 10.6687L2.02236 11.8887C1.99158 11.9452 1.94516 11.9916 1.88866 12.0223L0.668692 12.6908C0.61695 12.7242 0.574383 12.7699 0.544908 12.8239C0.515442 12.8779 0.5 12.9385 0.5 13C0.5 13.0615 0.515442 13.1221 0.544908 13.1761C0.574383 13.2301 0.61695 13.2758 0.668692 13.3092L1.88866 13.9777C1.94516 14.0084 1.99158 14.0548 2.02236 14.1113L2.69082 15.3313C2.72413 15.3831 2.76988 15.4256 2.8239 15.4551C2.87792 15.4846 2.93847 15.5 3 15.5C3.06153 15.5 3.12208 15.4846 3.1761 15.4551C3.23012 15.4256 3.27587 15.3831 3.30917 15.3313L3.96093 14.1113C3.99423 14.0508 4.04734 14.0036 4.11134 13.9777L5.33131 13.3092C5.38305 13.2758 5.42561 13.2301 5.45508 13.1761C5.48455 13.1221 5.5 13.0615 5.5 13C5.5 12.9385 5.48455 12.8779 5.45508 12.8239C5.42561 12.7699 5.38305 12.7242 5.33131 12.6908L4.28601 12.0465Z" fill={fill || "url(#paint0_linear_7846_12151)"} />
      <path fillRule="evenodd" clipRule="evenodd" d="M3.64062 1.37007C3.68452 1.44982 3.77984 1.48321 3.85734 1.53098L4.55421 1.96055C4.5887 1.98275 4.61707 2.01326 4.63672 2.04927C4.65637 2.08527 4.66667 2.12564 4.66667 2.16667C4.66667 2.20769 4.65637 2.24806 4.63672 2.28407C4.61707 2.32008 4.5887 2.35058 4.55421 2.37278L3.74089 2.81843C3.69823 2.83575 3.66283 2.86722 3.64062 2.90756L3.20611 3.72087C3.18391 3.75537 3.15341 3.78374 3.1174 3.80339C3.08139 3.82303 3.04102 3.83333 3 3.83333C2.95897 3.83333 2.91861 3.82303 2.8826 3.80339C2.84659 3.78374 2.81608 3.75537 2.79388 3.72087L2.34824 2.90756C2.32772 2.86989 2.29677 2.83894 2.25911 2.81843L1.44579 2.37278C1.4113 2.35058 1.38293 2.32008 1.36328 2.28407C1.34363 2.24806 1.33333 2.20769 1.33333 2.16667C1.33333 2.12564 1.34363 2.08527 1.36328 2.04927C1.38293 2.01326 1.4113 1.98275 1.44579 1.96055L2.25911 1.5149C2.29677 1.49439 2.32772 1.46344 2.34824 1.42577L2.79388 0.612458C2.81608 0.577967 2.84659 0.549592 2.8826 0.529942C2.91861 0.510292 2.95897 0.5 3 0.5C3.04102 0.5 3.08139 0.510292 3.1174 0.529942C3.15341 0.549592 3.18391 0.577967 3.20611 0.612458L3.64062 1.37007ZM5.85587 8.60308L8.31958 9.90767C8.43292 9.97158 8.52667 10.0652 8.59058 10.1784L9.89642 12.6398C9.95233 12.7483 10.0371 12.8393 10.1414 12.9028C10.2458 12.9664 10.3655 13 10.4877 13C10.6098 13 10.7297 12.9664 10.8339 12.9028C10.9382 12.8393 11.023 12.7483 11.079 12.6398L12.4094 10.1784C12.4342 10.1175 12.4709 10.0621 12.5175 10.0156C12.564 9.96908 12.6194 9.93242 12.6804 9.90767L15.1441 8.60308C15.2519 8.5435 15.3418 8.45608 15.4044 8.35C15.467 8.244 15.5 8.12308 15.5 8C15.5 7.87692 15.467 7.756 15.4044 7.65C15.3418 7.54392 15.2519 7.45658 15.1441 7.39692L12.6804 6.09236C12.5671 6.02845 12.4733 5.93482 12.4094 5.8216L11.079 3.36013C11.023 3.25165 10.9382 3.16066 10.8339 3.09713C10.7297 3.03361 10.6098 3 10.4877 3C10.3655 3 10.2458 3.03361 10.1414 3.09713C10.0371 3.16066 9.95233 3.25165 9.89642 3.36013L8.68042 5.65234C8.62083 5.76455 8.54492 5.86724 8.45508 5.95702C8.36525 6.04674 8.26258 6.12257 8.15033 6.18197L5.85587 7.39692C5.74805 7.45658 5.65817 7.54392 5.59559 7.65C5.53301 7.756 5.5 7.87692 5.5 8C5.5 8.12308 5.53301 8.244 5.59559 8.35C5.65817 8.45608 5.74805 8.5435 5.85587 8.60308ZM4.28601 12.0465C4.16977 11.9748 4.02677 11.9247 3.96093 11.8051L3.30917 10.6687C3.27587 10.6169 3.23012 10.5744 3.1761 10.5449C3.12208 10.5154 3.06153 10.5 3 10.5C2.93847 10.5 2.87792 10.5154 2.8239 10.5449C2.76988 10.5744 2.72413 10.6169 2.69082 10.6687L2.02236 11.8887C1.99158 11.9452 1.94516 11.9916 1.88866 12.0223L0.668692 12.6908C0.61695 12.7242 0.574383 12.7699 0.544908 12.8239C0.515442 12.8779 0.5 12.9385 0.5 13C0.5 13.0615 0.515442 13.1221 0.544908 13.1761C0.574383 13.2301 0.61695 13.2758 0.668692 13.3092L1.88866 13.9777C1.94516 14.0084 1.99158 14.0548 2.02236 14.1113L2.69082 15.3313C2.72413 15.3831 2.76988 15.4256 2.8239 15.4551C2.87792 15.4846 2.93847 15.5 3 15.5C3.06153 15.5 3.12208 15.4846 3.1761 15.4551C3.23012 15.4256 3.27587 15.3831 3.30917 15.3313L3.96093 14.1113C3.99423 14.0508 4.04734 14.0036 4.11134 13.9777L5.33131 13.3092C5.38305 13.2758 5.42561 13.2301 5.45508 13.1761C5.48455 13.1221 5.5 13.0615 5.5 13C5.5 12.9385 5.48455 12.8779 5.45508 12.8239C5.42561 12.7699 5.38305 12.7242 5.33131 12.6908L4.28601 12.0465Z" fill={fill || "white"} />
      <defs>
        <linearGradient id="paint0_linear_7846_12151" x1="8" y1="0.5" x2="8" y2="15.5" gradientUnits="userSpaceOnUse">
          <stop offset="0.0279863" stopColor="#CCB2FF" />
          <stop offset="0.281157" stopColor="#AA81FE" />
          <stop offset="1" stopColor="#6419FF" />
        </linearGradient>
      </defs>
    </svg>
  );
}

export const PromptInput = React.forwardRef<HTMLTextAreaElement, PromptInputProps>(
  (
    {
      value,
      placeholder,
      onChange,
      onSubmit,
      disabled = false,
      className,
      maxRows = 6,
      minRows = 4,
      icon = false,
      loading = false,
      ...props
    },
    ref,
  ) => {
    const [internalValue, setInternalValue] = React.useState<string>(value ?? '');

    React.useEffect(() => {
      if (value !== undefined) {
        setInternalValue(value);
      }
    }, [value]);

    const currentValue = value !== undefined ? value : internalValue;

    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
      const next = e.target.value;
      if (value === undefined) {
        setInternalValue(next);
      }
      onChange?.(next);
    };

    const handleSubmit = () => {
      if (disabled) return;
      const trimmed = currentValue.trim();
      if (!trimmed) return;
      onSubmit?.(currentValue);
      if (value === undefined) {
        setInternalValue('');
      }
    };

    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {
      if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault();
        handleSubmit();
      }
    };

    return (
      <div className={cn('relative w-full', className)}>
        <Textarea
          ref={ref}
          value={currentValue}
          onChange={handleChange}
          onKeyDown={handleKeyDown}
          placeholder={placeholder}
          disabled={disabled || loading}
          minRows={minRows}
          maxRows={maxRows}
          className={cn(
            'resize-none pb-10',
          )}
          {...props}
        />
        <Button
          type="button"
          className="absolute bottom-2 right-2"
          size={icon ? 'icon' : 'default'}
          onClick={handleSubmit}
          disabled={disabled || !currentValue.trim()}
          loading={loading}
        >
          {icon
            ? <ArrowUpIcon className="w-4 h-4" />
            : (
              <div className="flex items-center gap-2">
                <ThreeStarIcon className="w-4 h-4" />
                <span>Generate</span>
              </div>
            )
          }
        </Button>
      </div>
    );
  },
);

PromptInput.displayName = 'PromptInput';

export default PromptInput;


